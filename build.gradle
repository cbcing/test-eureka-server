//buildscript {
//	ext {
//		springBootVersion = '1.5.6.RELEASE'
////        springBootVersion = '1.4.3.RELEASE'
//
//    }
//	repositories {
//        jcenter()
//        maven { url "http://repo.spring.io/libs-snapshot-local" }
////		maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
//	}
//	dependencies {
//		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//	}
//}
//
//apply plugin: 'idea'
//apply plugin: 'spring-boot'
//jar {
//	baseName = 'spring-cloud-eureka-server'
//	version = '0.0.1-SNAPSHOT'
//}
//
////group = 'com.cbcing'
////version = '0.0.1-SNAPSHOT'
////sourceCompatibility = 1.8
////targetCompatibility = 1.8
//
//ext {
//    name = 'Eureka Server'
//    description = 'Eureka Server Test One'
//    version='0.0.1-SNAPSHOT'
//    sourceEncoding='UTF-8'
//}
//
//repositories {
////	maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
//    jcenter()
//    maven { url 'https://repo.spring.io/release/' }
//    maven { url "http://repo.spring.io/libs-snapshot-local" }
//    maven { url "http://repo.spring.io/libs-milestone-local" }
//    maven { url "http://repo.spring.io/libs-release-local" }
//}
//
//dependencyManagement {
//    imports {
//        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Dalston.SR4'
//    }
//}
//
//dependencies {
//	compile('org.springframework.boot:spring-boot-starter-web')
//	compileOnly('org.projectlombok:lombok')
//	testCompile('org.springframework.boot:spring-boot-starter-test')
//    testCompile "junit:junit"
//    testCompile('org.springframework.cloud:spring-cloud-starter-eureka-server')
//    compile('org.springframework.cloud:spring-cloud-starter-eureka')
//}
//
//task wrapper(type: Wrapper) {
//    gradleVersion = '2.3'
//}









buildscript {
    repositories {
//        jcenter()
//        maven { url "http://repo.spring.io/libs-snapshot-local" }
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.3.RELEASE")
    }
}

apply plugin: 'spring-boot'
apply plugin: 'idea'

ext {
    name = 'Eureka Server'
    description = 'Eureka Server demo project'
    version='0.0.1-SNAPSHOT'
    sourceEncoding='UTF-8'
}

repositories {
//    jcenter()
//    maven { url 'https://repo.spring.io/release/' }
//    maven { url "http://repo.spring.io/libs-snapshot-local" }
//    maven { url "http://repo.spring.io/libs-milestone-local" }
//    maven { url "http://repo.spring.io/libs-release-local" }
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Brixton.BUILD-SNAPSHOT"
    }
}

dependencies {
    compile 'org.springframework.cloud:spring-cloud-starter-eureka-server'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile "junit:junit"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

buildscript {
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/libs-snapshot-local" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.3.RELEASE")
    }
}

apply plugin: 'spring-boot'
apply plugin: 'idea'

jar {
    baseName = 'test-eureka-server'
    version = '0.0.1-SNAPSHOT'
}

ext {
    name = 'Eureka Server'
    description = 'Eureka Server demo project'
    version='0.0.1-SNAPSHOT'
    sourceEncoding='UTF-8'
}

repositories {
    jcenter()
    maven { url 'https://repo.spring.io/release/' }
    maven { url "http://repo.spring.io/libs-snapshot-local" }
    maven { url "http://repo.spring.io/libs-milestone-local" }
    maven { url "http://repo.spring.io/libs-release-local" }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Brixton.BUILD-SNAPSHOT"
    }
}

dependencies {
    compile 'org.springframework.cloud:spring-cloud-starter-eureka-server'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile "junit:junit"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}